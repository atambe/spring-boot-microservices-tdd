/*
 * This Java source file was generated by the Gradle 'init' task.
 */


package com.siemens.midsphere;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.mockito.Mockito.when;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.siemens.midsphere.domains.Role;
import com.siemens.midsphere.repositories.jpa.RoleRepository;
import com.siemens.midsphere.service.impl.RoleServiceImpl;


@ContextConfiguration(classes = MindEntityApplication.class)
@RunWith(SpringJUnit4ClassRunner.class)
public class RoleServiceTest {
	
	@Mock
	private RoleRepository roleRepo;
	
	@InjectMocks
	private RoleServiceImpl roleService;
	
	@Before
	public void setup(){
		MockitoAnnotations.initMocks(this);
	}
	
    @Test public void testGetByRoleId() {
    	
    	Role role = new Role();
    	role.setId("1");
    	role.setRoleName("techlead");
    	when(roleRepo.findOne("1")).thenReturn(role);
    	
    	Role result = roleService.getByRoleId("1");
    	
    	assertNotNull("Object is not retirved",result);
       
    }
    
    
    @Test 
    public void testCreateRole(){
    	Role role = new Role();
    	
    	role.setRoleName("techlead");
    	Role role1 = new Role();
    	role1.setId("1");
    	role1.setRoleName("techlead");
    	when(roleRepo.save(role)).thenReturn(role1);
    	Role result = roleService.createRole(role);
    	assertNotNull("Object is not UPDATED",result);
    	role.setId("1");
    	assertEquals("Objects are not equal", role1, result);
    }
    
    

    
@Test 
public void testUpdateRole(){
	Role role = new Role();
	role.setId("1");
	role.setRoleName("techlead");
	when(roleRepo.save(role)).thenReturn(role);
	Role result = roleService.updateRole(role);
	assertNotNull("Object is not saved",result);
	assertEquals("Objects are not equal", role, result);
}


}
